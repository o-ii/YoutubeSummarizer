@using AspireYouTubeSummariser.WebApp.Clients
@inject IApiAppClient ApiApp

<div class="container mt-5">
    <div class="text-center mb-4">
        <h1 class="display-5">YouTube Summariser</h1>
    </div>

    <div class="form-group mb-3">
        <label for="youtube-link" class="form-label">YouTube Link</label>
        <input class="form-control" id="youtube-link" placeholder="Add YouTube link here" @bind="youTubeLinkUrl" />
    </div>

    <div class="row mb-3">
        <div class="col-md">
            <div class="form-floating">
                <select class="form-select" id="video-language-code" @bind="videoLanguageCode">
                    <option value="en" selected>English</option>
                    <option value="ko">Korean</option>
                </select>
                <label for="video-language-code">Video Language</label>
            </div>
        </div>
        <div class="col-md">
            <div class="form-floating">
                <select class="form-select" id="summary-language-code" @bind="summaryLanguageCode">
                    <option value="en">English</option>
                    <option value="ko" selected>Korean</option>
                </select>
                <label for="summary-language-code">Summary Language</label>
            </div>
        </div>
    </div>

    <div class="d-flex justify-content-center gap-2 mt-4">
        <button class="btn btn-primary" id="summary" @onclick="SummariseAsync">Summary</button>
        <button class="btn btn-secondary" @onclick="ClearAsync">Clear</button>
    </div>

    <div class="form-group mt-4">
        <label for="result" class="form-label">Summary</label>
        <textarea class="form-control" id="result" rows="10" placeholder="Result will show here" readonly>@summaryResult</textarea>
    </div>

</div>

@code {
    private string youTubeLinkUrl = string.Empty;
    private string videoLanguageCode = "en";
    private string summaryLanguageCode = "ko";
    private string summaryResult = string.Empty;

    private async Task SummariseAsync()
    {
        try
        {
            var result = await ApiApp.SummariseAsync(youTubeLinkUrl, videoLanguageCode, summaryLanguageCode);
            summaryResult = result;
        }
        catch (Exception ex)
        {
            summaryResult = ex.Message;
        }
    }

    private async Task ClearAsync()
    {
        youTubeLinkUrl = string.Empty;
        videoLanguageCode = "en";
        summaryLanguageCode = "ko";
        summaryResult = string.Empty;

        await Task.CompletedTask;
    }
}